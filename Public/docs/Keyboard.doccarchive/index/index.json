{"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/keyboard\/keyboard\/init(layout:latching:noteon:noteoff:)","title":"init(layout: KeyboardLayout, latching: Bool, noteOn: (Pitch, CGPoint) -> Void, noteOff: (Pitch) -> Void)","type":"init"},{"path":"\/documentation\/keyboard\/keyboard\/init(layout:latching:noteon:noteoff:content:)","title":"init(layout: KeyboardLayout, latching: Bool, noteOn: (Pitch, CGPoint) -> Void, noteOff: (Pitch) -> Void, content: (Pitch, Bool) -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/keyboard\/keyboard\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(activationpoint:)-7neof","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(activationpoint:)-pxyf","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityaction(named:_:)-4gaf9","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityaction(named:_:)-4m65a","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityaction(named:_:)-5jwmx","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityactivationpoint(_:)-2cfcp","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityactivationpoint(_:)-9f6h3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-2or3x","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-5cp77","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-6d95b","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-6g6y2","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-7qslp","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-9k322","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-jb9z","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitycustomcontent(_:_:importance:)-vizz","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityhint(_:)-2hcwy","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityhint(_:)-3o4pv","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityhint(_:)-4mx5d","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityinputlabels(_:)-42ztj","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityinputlabels(_:)-65x9v","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityinputlabels(_:)-9eh27","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitylabel(_:)-1867i","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitylabel(_:)-1kmzk","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitylabel(_:)-2zczp","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityquickaction(style:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityquickaction(style:isactive:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, isActive: Binding<Bool>, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:)-20ddh","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:)-2enlc","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:)-5uazd","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:)-9cll5","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entryid:entrylabel:)-398ey","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entryid:entrylabel:)-3o58p","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entryid:entrylabel:)-53qxx","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entryid:entrylabel:)-7jxbq","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entrylabel:)-3376q","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entrylabel:)-50rhc","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entrylabel:)-6lwkp","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:entries:entrylabel:)-783x2","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:textranges:)-446yh","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:textranges:)-7wv2i","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:textranges:)-8b2em","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotor(_:textranges:)-9pg0m","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityvalue(_:)-51rjw","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityvalue(_:)-5tplf","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/accessibilityvalue(_:)-7y1dy","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:actions:)-1eihs","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:actions:)-36ct","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:actions:)-9kr73","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:actions:message:)-2ro8b","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:actions:message:)-6e2jl","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:actions:message:)-97xrh","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:presenting:actions:)-3ljjk","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:presenting:actions:)-3vfbt","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:presenting:actions:)-6q3fp","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:presenting:actions:message:)-1lhqc","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:presenting:actions:message:)-3d2r0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(_:ispresented:presenting:actions:message:)-68d95","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alignmentguide(_:computevalue:)-3pcfv","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/alignmentguide(_:computevalue:)-5h0bl","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/aspectratio(_:contentmode:)-1d3ig","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/aspectratio(_:contentmode:)-92q4t","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(_:in:fillstyle:)-4qyo2","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(_:in:fillstyle:)-9olqx","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(in:fillstyle:)-1szha","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/background(in:fillstyle:)-9ianw","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/badge(_:)-1vndf","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/badge(_:)-5vne8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/badge(_:)-64mbc","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/badge(_:)-6g3ia","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/buttonstyle(_:)-5eiqc","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/buttonstyle(_:)-6zece","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6y0ua","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8ttxx","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9v5bu","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5d7dk","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6rrmz","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9byig","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2ucja","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5j207","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5sa99","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4ueco","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7cbcn","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-84dt2","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-28905","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-48m86","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4csrv","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fileexporter(ispresented:documents:contenttype:oncompletion:)-f91r","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedobject(_:)-35et0","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedobject(_:)-397ql","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedsceneobject(_:)-4mxkd","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedsceneobject(_:)-9u0g3","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedscenevalue(_:_:)-59x35","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedscenevalue(_:_:)-8qg16","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedvalue(_:_:)-1f42y","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/focusedvalue(_:_:)-6dwzn","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/help(_:)-15rod","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/help(_:)-24u1x","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/help(_:)-5t7m","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/keyboardshortcut(_:)-37g6v","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/keyboardshortcut(_:)-4npvi","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/linelimit(_:)-4o28g","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/linelimit(_:)-4xdof","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/linelimit(_:)-6l49o","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/linelimit(_:)-8vo31","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listitemtint(_:)-4xti3","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listitemtint(_:)-5oazn","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdocument(_:preview:)-5d2bi","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdocument(_:preview:)-6acv5","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdocument(_:preview:)-7u88t","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationdocument(_:preview:)-8ml1l","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationsubtitle(_:)-87q9z","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationsubtitle(_:)-8k988","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationsubtitle(_:)-urpv","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationtitle(_:)-25kre","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationtitle(_:)-2cyg3","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationtitle(_:)-5ntmv","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationtitle(_:)-8u2hz","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/navigationtitle(_:)-rt81","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondrop(of:delegate:)-22hae","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/ondrop(of:delegate:)-27lwf","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/ondrop(of:istargeted:perform:)-1ji0w","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/ondrop(of:istargeted:perform:)-1sdr5","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondrop(of:istargeted:perform:)-5zq6h","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ondrop(of:istargeted:perform:)-7ddac","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/onpastecommand(of:perform:)-2l05m","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onpastecommand(of:perform:)-7nn81","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onpastecommand(of:validator:perform:)-6lywa","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/onpastecommand(of:validator:perform:)-cwv4","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/padding(_:)-3jyp4","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/padding(_:)-8uubq","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/renameaction(_:)-39s7d","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/renameaction(_:)-nhjw","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/safeareainset(edge:alignment:spacing:content:)-6kb4","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/safeareainset(edge:alignment:spacing:content:)-9z7rk","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scaleeffect(_:anchor:)-47r24","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scaleeffect(_:anchor:)-9l787","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:placement:prompt:)-5xjct","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:placement:prompt:)-8jjsh","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:placement:prompt:)-f3rk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:placement:prompt:suggestions:)-35w4u","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:placement:prompt:suggestions:)-8cxs9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:placement:prompt:suggestions:)-jfig","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:placement:prompt:token:)-1axcz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:placement:prompt:token:)-5ywq0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:placement:prompt:token:)-8mfb6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:placement:prompt:token:suggestions:)-1p0m","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:placement:prompt:token:suggestions:)-4a23l","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:placement:prompt:token:suggestions:)-5qod6","title":"func searchable<C, T, V, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-239ox","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-3afpd","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-5k5fx","title":"func searchable<C, T, D, V, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-1lf2n","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-27197","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-2us7m","title":"func searchable<C, T, D, V1, V2, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3aohf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5j1fk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6wz7r","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbar(content:)-3mywu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbar(content:)-4gdt7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboard\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/keyboard\/keyboard\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/keyboard\/keyboard","title":"Keyboard","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/keyboard\/keyboardkey\/init(pitch:isactivated:text:whitekeycolor:blackkeycolor:pressedcolor:flattop:alignment:isactivatedexternally:)","title":"init(pitch: Pitch, isActivated: Bool, text: String, whiteKeyColor: Color, blackKeyColor: Color, pressedColor: Color, flatTop: Bool, alignment: Alignment, isActivatedExternally: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/keyboard\/keyboardkey\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(activationpoint:)-6oxs8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(activationpoint:)-xodm","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityaction(named:_:)-1nv4v","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityaction(named:_:)-43xa6","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityaction(named:_:)-86eil","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityactivationpoint(_:)-93dk6","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityactivationpoint(_:)-o2nx","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-1if75","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-2ng07","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-526xn","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-81iwb","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-8tnuz","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-8x2vq","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-8zdhy","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitycustomcontent(_:_:importance:)-9riro","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityhint(_:)-3w4qh","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityhint(_:)-58x00","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityhint(_:)-5l4ih","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityinputlabels(_:)-2ck5t","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityinputlabels(_:)-6y3hc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityinputlabels(_:)-i0r5","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitylabel(_:)-56bgh","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitylabel(_:)-6fjby","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitylabel(_:)-9nll","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityquickaction(style:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityquickaction(style:isactive:content:)","title":"func accessibilityQuickAction<Style, Content>(style: Style, isActive: Binding<Bool>, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:)-16ryg","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:)-1wv7m","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:)-63n9m","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:)-85nkl","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entryid:entrylabel:)-5mlmi","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entryid:entrylabel:)-5pvsw","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entryid:entrylabel:)-7uyui","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entryid:entrylabel:)-8hmey","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entrylabel:)-1pjw8","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entrylabel:)-1r0cj","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entrylabel:)-6m9xy","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:entries:entrylabel:)-7qnhz","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:textranges:)-17wd1","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:textranges:)-1ulpv","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:textranges:)-6ss1h","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotor(_:textranges:)-8p0g3","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityvalue(_:)-3xqpw","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityvalue(_:)-7ax2d","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/accessibilityvalue(_:)-7qo5s","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:actions:)-1xzym","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:actions:)-4fmex","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:actions:)-4j71u","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:actions:message:)-7ctjd","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:actions:message:)-7s71g","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:actions:message:)-9w9vr","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:presenting:actions:)-4u5mu","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:presenting:actions:)-8c4fh","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:presenting:actions:)-90p0o","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:presenting:actions:message:)-2i7bq","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:presenting:actions:message:)-32umv","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(_:ispresented:presenting:actions:message:)-60vgb","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alignmentguide(_:computevalue:)-30as9","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/alignmentguide(_:computevalue:)-9ivh3","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/aspectratio(_:contentmode:)-8cwho","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/aspectratio(_:contentmode:)-8zpn","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(_:in:fillstyle:)-78bji","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(_:in:fillstyle:)-ubt6","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(in:fillstyle:)-3sl64","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/background(in:fillstyle:)-5eda5","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/badge(_:)-1r44y","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/badge(_:)-3n247","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/badge(_:)-4zysa","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/badge(_:)-9namc","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/buttonstyle(_:)-2nu2g","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/buttonstyle(_:)-4rd5q","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:actions:)-50wp3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6nxsj","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:actions:)-841nn","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-397t8","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5vg0s","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-76448","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1p0eo","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2xrxt","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-62dwi","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-18v2k","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4g4h9","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5xqe3","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4gujo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-86trf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5q6tx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5qvmu","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedobject(_:)-1u77m","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedobject(_:)-7kmlg","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedsceneobject(_:)-3u55q","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedsceneobject(_:)-6g1ce","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedscenevalue(_:_:)-65uer","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedscenevalue(_:_:)-82yk","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedvalue(_:_:)-66h4f","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/focusedvalue(_:_:)-70qzh","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/help(_:)-5ib4d","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/help(_:)-7jyr5","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/help(_:)-8umtv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/keyboardshortcut(_:)-5u147","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/keyboardshortcut(_:)-719ey","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/linelimit(_:)-34qi9","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/linelimit(_:)-3f5e5","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/linelimit(_:)-9n0i4","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/linelimit(_:)-p1v5","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listitemtint(_:)-35s1k","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listitemtint(_:)-7oyrg","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdocument(_:preview:)-1zwip","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdocument(_:preview:)-4czxd","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdocument(_:preview:)-6kpd4","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationdocument(_:preview:)-z2ef","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationsubtitle(_:)-1rlc","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationsubtitle(_:)-8b411","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationsubtitle(_:)-92ois","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationtitle(_:)-3oo3","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationtitle(_:)-49sx5","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationtitle(_:)-6ry4y","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationtitle(_:)-90r90","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/navigationtitle(_:)-93zje","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/ondrop(of:delegate:)-3xcvc","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondrop(of:delegate:)-64eiv","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/ondrop(of:istargeted:perform:)-7xmo3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/ondrop(of:istargeted:perform:)-91oun","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondrop(of:istargeted:perform:)-9smds","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ondrop(of:istargeted:perform:)-rtio","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/onpastecommand(of:perform:)-33yow","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onpastecommand(of:perform:)-3zuvh","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/onpastecommand(of:validator:perform:)-6fu6b","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onpastecommand(of:validator:perform:)-9iylw","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/padding(_:)-7oldf","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/padding(_:)-s6h1","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/renameaction(_:)-5wtgc","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/renameaction(_:)-8ppf3","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/safeareainset(edge:alignment:spacing:content:)-2oydw","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/safeareainset(edge:alignment:spacing:content:)-muej","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scaleeffect(_:anchor:)-7yulo","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scaleeffect(_:anchor:)-9zhiu","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:placement:prompt:)-223m3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:placement:prompt:)-5xz76","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:placement:prompt:)-z627","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:placement:prompt:suggestions:)-4990v","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:placement:prompt:suggestions:)-8ybr0","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:placement:prompt:suggestions:)-9m780","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:placement:prompt:token:)-2auy2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:placement:prompt:token:)-2ych","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:placement:prompt:token:)-7ssda","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:placement:prompt:token:suggestions:)-1zs7c","title":"func searchable<C, T, V, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:placement:prompt:token:suggestions:)-35015","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:placement:prompt:token:suggestions:)-9xw9a","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-2jd9r","title":"func searchable<C, T, D, V, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-51842","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:scope:placement:prompt:token:scopes:)-85sw6","title":"func searchable<C, T, D, V>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-38a1x","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-40ydl","title":"func searchable<C, T, D, V1, V2, S>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:scope:placement:prompt:token:scopes:suggestions:)-8qlrh","title":"func searchable<C, T, D, V1, V2>(text: Binding<String>, tokens: Binding<C>, scope: Binding<D>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T, scopes: () -> V1, suggestions: () -> V2) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-16vvx","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-53gac","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-ks0q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbar(content:)-2lasg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbar(content:)-5m1x3","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/keyboard\/keyboardkey\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/keyboard\/keyboardkey\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/keyboard\/keyboardkey","title":"KeyboardKey","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/keyboard\/touchcallback","title":"TouchCallback","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/keyboard\/keyboardlayout\/guitar(openpitches:fretcount:)","title":"case guitar(openPitches: [Pitch], fretcount: Int)","type":"case"},{"path":"\/documentation\/keyboard\/keyboardlayout\/isomorphic(pitchrange:root:scale:)","title":"case isomorphic(pitchRange: ClosedRange<Pitch>, root: NoteClass, scale: Scale)","type":"case"},{"path":"\/documentation\/keyboard\/keyboardlayout\/piano(pitchrange:)","title":"case piano(pitchRange: ClosedRange<Pitch>)","type":"case"},{"path":"\/documentation\/keyboard\/keyboardlayout\/verticalisomorphic(pitchrange:root:scale:)","title":"case verticalIsomorphic(pitchRange: ClosedRange<Pitch>, root: NoteClass, scale: Scale)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/keyboard\/keyboardlayout\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/keyboard\/keyboardlayout\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/keyboard\/keyboardlayout","title":"KeyboardLayout","type":"enum"}],"path":"\/documentation\/keyboard","title":"Keyboard","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}