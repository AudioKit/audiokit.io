{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preparing (or acquiring) sample files"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compressing sample files"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating a SFZ metadata file"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Testing"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This document describes the process of preparing a set of demonstration samples, starting with the sample files included with "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/AudioKit\/ROMPlayer"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can download the finished product from "},{"type":"reference","isActive":true,"identifier":"http:\/\/audiokit.io\/downloads\/ROMPlayerInstruments.zip"},{"type":"text","text":"."}]},{"anchor":"Preparingacquiring-sample-files","level":2,"type":"heading","text":"Preparing\/acquiring sample files"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The demo samples were recorded and prepared by Matthew Fecher from a Yamaha TX81z hardware FM synthesizer module, using commercial sampling software called "},{"type":"reference","isActive":true,"identifier":"http:\/\/www.samplerobot.com"},{"type":"text","text":". If you have "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MainStage 3"}]},{"type":"text","text":" on the Mac, you can use its excellent "},{"type":"emphasis","inlineContent":[{"type":"text","text":"autosampler"}]},{"type":"text","text":" function instead."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important:"}]},{"type":"text","text":" If you’re planning to work with existing samples, or capture the output from a sample-based instrument, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"give careful consideration to copyright issues"}]},{"type":"text","text":". See Matt Fecher’s excellent summary "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/AudioKit\/ROMPlayer#what-sounds-can-you-use-in-your-app"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Be very careful with SoundFont files you find on the Internet."}]},{"type":"text","text":" Many are marked “public domain”, but actually consist of unlicensed, illegally copied content. While such things are fine for your own personal use, distributing them publicly with your name attached (e.g. in an iOS app on the App Store) can land you in serious legal trouble."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Turning a set of rough digital recordings into cleanly-playing, looping samples is a complex process in itself, which is beyond the scope of this document. For a quick introduction, see "},{"type":"reference","isActive":true,"identifier":"http:\/\/tweakheadz.com\/sampling-tips\/"},{"type":"text","text":". For in-depth exploration, look into YouTube videos by "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.youtube.com\/user\/thepluginguru"},{"type":"text","text":", in particular "},{"type":"reference","isActive":true,"identifier":"https:\/\/youtu.be\/o7rL38xrRSE"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/youtu.be\/qPbf5nNyQYo"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"https:\/\/youtu.be\/Bx9PC8JJNGg"},{"type":"text","text":"."}]},{"anchor":"Sample-file-compression","level":2,"type":"heading","text":"Sample file compression"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Sampler"}]},{"type":"text","text":" reads "},{"type":"codeVoice","code":".wv"},{"type":"text","text":" files compressed using the open-source "},{"type":"reference","isActive":true,"identifier":"http:\/\/www.wavpack.com"},{"type":"text","text":" software. On the Mac, you must first install the Wavpack command-line tools. Then you can use the following Python 2 script to compress a whole folder-full of "},{"type":"codeVoice","code":".wav"},{"type":"text","text":" files:"}]},{"type":"codeListing","syntax":"python","code":["import os, subprocess","","for wav in os.listdir('.'):","  if os.path.isfile(wav) and aif.endswith('.wav'):","    print 'converting', wav","    name = wav[:-4]","    wv = name + '.wv'","    subprocess.call(['\/usr\/local\/bin\/wavpack', '-q', '-r', '-b24', wav])","    #os.remove(wav)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Uncomment the last line if you’re sure you want to delete WAV files after converting them."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the "},{"type":"codeVoice","code":"wavpack"},{"type":"text","text":" command-line program does not recognize the "},{"type":"codeVoice","code":".aif"},{"type":"text","text":" file format, which is too bad because that’s what "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MainStage 3"}]},{"type":"text","text":"’s autosampler produces. However, we can use the "},{"type":"codeVoice","code":"afconvert"},{"type":"text","text":" command-line utility built into macOS to convert "},{"type":"codeVoice","code":".aif"},{"type":"text","text":" files to "},{"type":"codeVoice","code":".wav"},{"type":"text","text":" like this:"}]},{"type":"codeListing","syntax":"python","code":["import os, subprocess","","for aif in os.listdir('.'):","  if os.path.isfile(aif) and aif.endswith('.aif'):","    print 'converting', aif","    name = aif[:-4]","    wav = name + '.wav'","    wv = name + '.wv'","    subprocess.call(['\/usr\/bin\/afconvert', '-f', 'WAVE', '-d', 'LEI24', aif, wav])","    subprocess.call(['\/usr\/local\/bin\/wavpack', '-q', '-r', '-b24', wav])","    os.remove(wav)","    #os.remove(aif)"]},{"anchor":"Creating-a-SFZ-metadata-file","level":2,"type":"heading","text":"Creating a SFZ metadata file"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mapping of MIDI (note-number, velocity) pairs to sample files requires additional data, for which "},{"type":"strong","inlineContent":[{"type":"text","text":"Sampler"}]},{"type":"text","text":" uses a simple subset of the "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/SFZ_(file_format)"},{"type":"text","text":". SFZ is essentially a text-based, open-standard alternative to the proprietary "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/SoundFont"},{"type":"text","text":" format."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to key-mapping, SFZ files can also contain other important metadata such as loop-start and -end points for each sample file."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The full SFZ standard is very rich, but at the time of writing, "},{"type":"strong","inlineContent":[{"type":"text","text":"Sampler"}]},{"type":"text","text":"’s SFZ import capability is limited to key mapping and loop metadata only."}]},{"anchor":"How-the-demo-SFZ-files-were-made","level":3,"type":"heading","text":"How the demo SFZ files were made"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Matt originally provided "},{"type":"codeVoice","code":".esx"},{"type":"text","text":" metadata files for use by Apple’s ESX24 Sampler plugin included with Logic Pro X. These files use a proprietary binary format and are notoriously difficult to work with."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fortunately, KVR user "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.kvraudio.com\/forum\/memberlist.php?mode=viewprofile&u=134002"},{"type":"text","text":" has provided a free tool called "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.kvraudio.com\/forum\/viewtopic.php?t=399035"},{"type":"text","text":", which does a reasonable job of reading "},{"type":"codeVoice","code":".esx"},{"type":"text","text":" files and outputting equivalent "},{"type":"codeVoice","code":".sfz"},{"type":"text","text":" files. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Note this tool is written in Python 3, which is not installed by default on Macs, but is "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.python.org\/downloads\/mac-osx\/"},{"type":"text","text":"."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following Python 2 script will convert all "},{"type":"codeVoice","code":".esx"},{"type":"text","text":" files in a folder to "},{"type":"codeVoice","code":".sfz"},{"type":"text","text":" format:"}]},{"type":"codeListing","syntax":"python","code":["import os, subprocess","","for exs in os.listdir('.'):","  if os.path.isfile(exs) and exs.endswith('.exs'):","    print 'converting', exs","    sfz = exs[:-4] + '.sfz'","    subprocess.call(['\/usr\/local\/bin\/python3', '\/Users\/shane\/exs2sfz.py', exs, sfz, 'samples'])","    #os.remove(exs)"]},{"anchor":"Other-methods-to-create-SFZ-files","level":2,"type":"heading","text":"Other methods to create SFZ files"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since SFZ files are simply plain-text files, you can use an ordinary text editor to create them."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At the other end of the scale, a company called Chicken Systems sells a very powerful tool called "},{"type":"reference","isActive":true,"identifier":"http:\/\/www.chickensys.com\/products2\/translator\/"},{"type":"text","text":", which can convert both sample and metadata to and from a huge list of professional formats, including ESX24 (Apple), SoundFont (SF2 and SFZ), Kontakt 5 (Native Instruments), and many more. The full version costs $149 (USD), but if you’re only interested in converting to SFZ, you can buy the “Special Edition” for just $79."}]},{"anchor":"Scripts-for-MainStage-3-Autosampler","level":2,"type":"heading","text":"Scripts for MainStage 3 Autosampler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The autosampler built into Apple’s "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MainStage 3"}]},{"type":"text","text":" produces AIFF-C audio files and an EXS24 metadata file, in a newer format than vonRed’s "},{"type":"codeVoice","code":"esxtosfz.py"},{"type":"text","text":" script can handle. However, all the necessary details are actually encoded right in the "},{"type":"codeVoice","code":".aif"},{"type":"text","text":" sample files. The following Python script uses a simplistic parsing technique to pull the necessary numbers out of a set of "},{"type":"codeVoice","code":".aif"},{"type":"text","text":" files and create a corresponding "},{"type":"codeVoice","code":".sfz"},{"type":"text","text":" file:"}]},{"type":"codeListing","syntax":"python","code":["import sys, os","import struct"," ","if len(sys.argv) != 3:","    print('usage: python parse.py <dirname> <noteoffset>')","    exit(0)"," ","baseName = sys.argv[1]","noteOffset = int(sys.argv[2])"," ","itemList = list()","for filename in os.listdir(baseName):","    if filename.endswith('.aif'):","        noteName = filename.split('-')[1][:-4]","        octaveNumber = int(noteName[-1])","        letters = noteName[:-1]","        noteNumber = 12","        if letters == 'F#':","            noteNumber += 6","        noteNumber += octaveNumber * 12 + noteOffset","        itemList.append((noteNumber, noteName))"," ","sfz = open(baseName + '.sfz', 'w')"," ","itemList.sort()","for (noteNumber, noteName) in itemList:","    filePath = os.path.join(baseName, baseName + '-' + noteName + '.aif')","    data = open(filePath, 'rb').read(100)","    start = struct.unpack_from('>I', data, 0x32)[0]","    end = struct.unpack_from('>I', data, 0x3E)[0]","    loopStart = struct.unpack_from('>I', data, 0x48)[0]","    loopEnd = struct.unpack_from('>I', data, 0x58)[0]","    if noteNumber == itemList[0][0]:","        sfz.write('<group>lokey=0 hikey=%d pitch_keycenter=%d pitch_keytrack=100\\n' % (noteNumber+3, noteNumber))","    elif noteNumber == itemList[-1][0]:","        sfz.write('<group>lokey=%d hikey=127 pitch_keycenter=%d pitch_keytrack=100\\n' % (noteNumber-2, noteNumber))","    else:","        sfz.write('<group>lokey=%d hikey=%d pitch_keycenter=%d pitch_keytrack=100\\n' % (noteNumber-2, noteNumber+3, noteNumber))","    sfz.write('    <region> lovel=000 hivel=127')","    if start > 0:","        sfz.write(' offset=%d' % start)","    if end > 0:","        sfz.write(' end=%d' % end)","    if loopStart > 0 and loopEnd > 0:","        sfz.write(' loop_mode=loop_sustain loop_start=%d loop_end=%d' % (loopStart, loopEnd))","    sfz.write(' sample=%s\\n' % filePath)"," ","sfz.close()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note this script relies on the standard Python module "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.python.org\/2\/library\/struct.html"},{"type":"text","text":" to parse binary data. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"It won’t work with all AIFF files"}]},{"type":"text","text":", though, because it doesn’t actually understand the "},{"type":"reference","isActive":true,"identifier":"http:\/\/www-mmsp.ece.mcgill.ca\/Documents\/AudioFormats\/AIFF\/AIFF.html"},{"type":"text","text":". The following is a preliminary version of a new Python 2.7 script which does a better job of parsing an individual AIFF file:"}]},{"type":"codeListing","syntax":"python","code":["import chunk, struct"," ","def readCOMM(chk):","    print 'COMM', chk.getsize()","    data = chk.read()","    channels, frames, bitsPerSample, exp, mant = struct.unpack('>hIhhQ', data)","    print channels, 'channels,', frames, 'frames,', bitsPerSample, 'bits\/sample',","    # simplified conversion of 80-bit SANE float, using 1st 32 bits of mantissa","    sampleRate = ((mant >> 32) \/ pow(2.0, 31)) * pow(2.0, exp - 16383)","    print sampleRate, 'samples\/sec'"," ","def readMARK(chk):","    print 'MARK', chk.getsize()","    count = struct.unpack('>h', chk.read(2))[0]","    for i in xrange(count):","        id, position, charCount = struct.unpack('>hIB', chk.read(7))","        name = chk.read(charCount)","        print '  ', id, position, name"," ","def loopModeName(mode):","    if mode == 0:","        return 'NoLoop'","    elif mode == 1:","        return 'FwdLoop'","    elif mode == 2:","        return 'FwdRev'","    else:","        return '?mode?', mode"," ","def readINST(chk):","    print 'INST', chk.getsize()","    baseNote, detune, lowNote, highNote, lowVel, highVel, gain = struct.unpack('>bbbbbbh', chk.read(8))","    susLoopMode, susloopStart, susLoopEnd = struct.unpack('>hhh', chk.read(6))","    relLoopMode, relloopStart, relLoopEnd = struct.unpack('>hhh', chk.read(6))","    print '  note', baseNote, 'detune', detune,","    print 'noteRange', lowNote, '-', highNote, ","    print 'velRange', lowVel, '-', highVel","    print '  susLoop', loopModeName(susLoopMode), susloopStart, susLoopEnd","    print '  relLoop', loopModeName(relLoopMode), relloopStart, relLoopEnd"," ","file = open('X50 Brothers Acoustic-C4.aif')","chk = chunk.Chunk(file)","name = chk.getname()","if name != b'FORM':","    print \"File starts with '%s' not 'FORM'\" % name","    exit()","size = chk.getsize()","kind = chk.read(4)","print name, size, kind"," ","while 1:","    try:","        chk = chunk.Chunk(file)","    except EOFError:","        break","    name = chk.getname()","    if name == b'COMM':","        readCOMM(chk)","    elif name == b'MARK':","        readMARK(chk)","    elif name == b'INST':","        readINST(chk)","    else:","        size = chk.getsize()","        print name, size","    chk.skip()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This script makes use of the "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.python.org\/2\/library\/chunk.html"},{"type":"text","text":" Python library, together with specific data gleaned from the "},{"overridingTitleInlineContent":[{"type":"text","text":"AIFF-C format specifications"}],"isActive":true,"type":"reference","identifier":"http:\/\/www-mmsp.ece.mcgill.ca\/Documents\/AudioFormats\/AIFF\/AIFF.html","overridingTitle":"AIFF-C format specifications"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The obvious next step is to combine elements of both scripts, to produce a better version of the first one."}]},{"anchor":"Simple-Example-of-a-simple-SFZ-file","level":2,"type":"heading","text":"Simple Example of a simple SFZ file"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your sampling needs are not very complex, as in, you simply just need to load your "},{"type":"codeVoice","code":"Sampler"},{"type":"text","text":" with a variety samples, here is an example of a working SFZ File:"}]},{"type":"codeListing","syntax":null,"code":["<control>","default_path=samples\/","<global>","<group>key=33","<region> sample=A1.wv","<group>key=34","<region> sample=A#1.wv","<group>key=35","<region> sample=B1.wv","<group>key=36","<region> sample=C2.wv","<group>key=37","<region> sample=C#2.wv","<group>key=38","<region> sample=D2.wv","<group>key=39","<region> sample=D#2.wv","<group>key=40","<region> sample=E2.wv","<group>key=41","<region> sample=F2.wv","<group>key=42","<region> sample=F#2.wv","<group>key=43","<region> sample=G2.wv","<group>key=44","<region> sample=G#2.wv","<group>key=45","<region> sample=A2.wv","<group>key=46","<region> sample=A#2.wv","<group>key=47","<region> sample=B2.wv","<group>key=48","<region> sample=C3.wv","<group>key=49","<region> sample=C#3.wv","<group>key=50","<region> sample=D3.wv","<group>key=51","<region> sample=D#3.wv","<group>key=52","<region> sample=E3.wv","<group>key=53","<region> sample=F3.wv","<group>key=54","<region> sample=F#3.wv","<group>key=55","<region> sample=G3.wv","<group>key=56","<region> sample=G#3.wv","<group>key=57","<region> sample=A3.wv","<group>key=58","<region> sample=A#3.wv","<group>key=59","<region> sample=B3.wv","<group>key=60","<region> sample=C4.wv","<group>key=61","<region> sample=C#4.wv","<group>key=62","<region> sample=D4.wv","<group>key=63","<region> sample=D#4.wv","<group>key=64","<region> sample=E4.wv","<group>key=65","<region> sample=F4.wv","<group>key=66","<region> sample=F#4.wv","<group>key=67","<region> sample=G4.wv","<group>key=68","<region> sample=G#4.wv","<group>key=69","<region> sample=A4.wv","<group>key=70","<region> sample=A#4.wv","<group>key=71","<region> sample=B4.wv","<group>lokey=72 hikey=80 pitch_keycenter=72","<region> sample=C5.wv"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This SFZ file is an example of a piano sampler with samples matched note for note in most octaves. Let’s go over from top to bottom:"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"<control>"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a necessary SFZ keyword to denote that this is indeed a SFZ file."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"default_path=samples\/"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The path in which the samples you are describing in the SFZ file reside. In this example SFZ file, we have a folder named "},{"type":"codeVoice","code":"samples"},{"type":"text","text":" that is in the same directory as the SFZ file. You may name your folder any name, as long as it is described correctly in the SFZ file. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"You will need to ensure that your folder of samples and the path is described correctly. If your SFZ file resides in a different directory, please be sure find the correct path for the folder of samples so that the SFZ can correctly find them"}]}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"<group>key=33"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information on the "},{"type":"codeVoice","code":"<group>"},{"type":"text","text":" SFZ keyword, please read "},{"type":"reference","isActive":true,"identifier":"https:\/\/sfzformat.com\/headers\/group"},{"type":"text","text":". Here we are preparing the MIDI note 33 to be assigned to a sample."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"<region> sample=A1.wv>"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information on the "},{"type":"codeVoice","code":"<region>"},{"type":"text","text":" SFZ keyword, please read "},{"type":"reference","isActive":true,"identifier":"https:\/\/sfzformat.com\/headers\/region"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we are assigning a specific sample you have collected to the above group\/key."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"So now with:"},{"type":"text","text":" "},{"type":"codeVoice","code":"<group>key=33"},{"type":"text","text":" "},{"type":"codeVoice","code":"<region> sample=A1.wv>"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Our sampler will assign key 33 to the sample "},{"type":"codeVoice","code":"A1.wv"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example file, we are just continuing to assign 1 to 1 keys to samples."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lets look at the last 2 lines:"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"<group>lokey=72 hikey=80 pitch_keycenter=72 <region> sample=C5.wv"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"lokey"},{"type":"text","text":" and "},{"type":"codeVoice","code":"hikey"},{"type":"text","text":" allows us to use one sample to map to multiple keys or MIDI notes. "},{"type":"codeVoice","code":"pitch_keycenter"},{"type":"text","text":" tells us where to center the key or MIDI note for the sample. In these two lines, we are assigning the sample "},{"type":"codeVoice","code":"C5.wv"},{"type":"text","text":" to MIDI notes (or keys) 72 "},{"type":"emphasis","inlineContent":[{"type":"text","text":"through"}]},{"type":"text","text":" 80. The sampler will pitch shift the sample in order to accommodate the higher\/lower notes. Be aware that small amounts of pitch shifting will be hard to discern, but anything past a Perfect 5th (7 semitones) will start to exhibit pitch shifting artifacts. Check out more information on "},{"type":"reference","isActive":true,"identifier":"https:\/\/sfzformat.com\/opcodes\/hikey"},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"https:\/\/sfzformat.com\/opcodes\/pitch_keycenter"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"IMPORTANT"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"In order for the Audiokit "},{"type":"codeVoice","code":"Sampler"},{"type":"text","text":" to load your samples correctly, in your "},{"type":"codeVoice","code":"<region>"},{"type":"text","text":" declarations, the sample assignment MUST BE THE LAST ELEMENT of your "},{"type":"codeVoice","code":"<region>"},{"type":"text","text":" declarations."}]}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"<region>"},{"type":"text","text":" has other opcodes you can use such as "},{"type":"codeVoice","code":"lovel"},{"type":"text","text":" and "},{"type":"codeVoice","code":"hivel"},{"type":"text","text":", if you do not place your "},{"type":"codeVoice","code":"sample=YOURSAMPLENAME.YOURFILEFORMAT"},{"type":"text","text":" as the last element in the "},{"type":"codeVoice","code":"<region>"},{"type":"text","text":" line, the samples will not load!"}]},{"anchor":"Testing","level":2,"type":"heading","text":"Testing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whatever methods you use to create samples and metadata files, it’s important to test, test, test, to make sure things are working the way you want."}]},{"anchor":"Going-further","level":2,"type":"heading","text":"Going further"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The subject of preparing sample sets is deep and complex, and this article has barely scratched the surface. We hope to provide additional online resources as time goes on, especially as "},{"type":"strong","inlineContent":[{"type":"text","text":"Sampler"}]},{"type":"text","text":"’s implementation expands and changes. Interested users, especially those with practical experience to share, are encouraged to get in touch with the AudioKit team to help with this process."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/dunneaudiokit\/preparing-sample-sets"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DunneAudioKit\/documentation\/DunneAudioKit\/Preparing-Sample-Sets","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Preparing sets of samples for "},{"type":"strong","inlineContent":[{"type":"text","text":"Sampler"}]},{"type":"text","text":" involves four steps:"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Preparing sample sets for Sampler","role":"article","modules":[{"name":"DunneAudioKit"}]},"hierarchy":{"paths":[["doc:\/\/DunneAudioKit\/documentation\/DunneAudioKit"]]},"references":{"http://www.chickensys.com/products2/translator/":{"title":"Translator","titleInlineContent":[{"type":"text","text":"Translator"}],"type":"link","identifier":"http:\/\/www.chickensys.com\/products2\/translator\/","url":"http:\/\/www.chickensys.com\/products2\/translator\/"},"https://www.youtube.com/user/thepluginguru":{"title":"John Lemkuhl aka PlugInGuru","titleInlineContent":[{"type":"text","text":"John Lemkuhl aka PlugInGuru"}],"type":"link","identifier":"https:\/\/www.youtube.com\/user\/thepluginguru","url":"https:\/\/www.youtube.com\/user\/thepluginguru"},"http://tweakheadz.com/sampling-tips/":{"title":"The Secrets of Great Sounding Samples","titleInlineContent":[{"type":"text","text":"The Secrets of Great Sounding Samples"}],"type":"link","identifier":"http:\/\/tweakheadz.com\/sampling-tips\/","url":"http:\/\/tweakheadz.com\/sampling-tips\/"},"https://www.python.org/downloads/mac-osx/":{"title":"available here","titleInlineContent":[{"type":"text","text":"available here"}],"type":"link","identifier":"https:\/\/www.python.org\/downloads\/mac-osx\/","url":"https:\/\/www.python.org\/downloads\/mac-osx\/"},"https://github.com/AudioKit/ROMPlayer#what-sounds-can-you-use-in-your-app":{"title":"What Sounds Can You Use in your App?","titleInlineContent":[{"type":"text","text":"What Sounds Can You Use in your App?"}],"type":"link","identifier":"https:\/\/github.com\/AudioKit\/ROMPlayer#what-sounds-can-you-use-in-your-app","url":"https:\/\/github.com\/AudioKit\/ROMPlayer#what-sounds-can-you-use-in-your-app"},"https://docs.python.org/2/library/chunk.html":{"title":"chunk","titleInlineContent":[{"type":"text","text":"chunk"}],"type":"link","identifier":"https:\/\/docs.python.org\/2\/library\/chunk.html","url":"https:\/\/docs.python.org\/2\/library\/chunk.html"},"http://www.samplerobot.com":{"title":"SampleRobot","titleInlineContent":[{"type":"text","text":"SampleRobot"}],"type":"link","identifier":"http:\/\/www.samplerobot.com","url":"http:\/\/www.samplerobot.com"},"https://docs.python.org/2/library/struct.html":{"title":"struct","titleInlineContent":[{"type":"text","text":"struct"}],"type":"link","identifier":"https:\/\/docs.python.org\/2\/library\/struct.html","url":"https:\/\/docs.python.org\/2\/library\/struct.html"},"https://github.com/AudioKit/ROMPlayer":{"title":"ROMPlayer","titleInlineContent":[{"type":"text","text":"ROMPlayer"}],"type":"link","identifier":"https:\/\/github.com\/AudioKit\/ROMPlayer","url":"https:\/\/github.com\/AudioKit\/ROMPlayer"},"https://en.wikipedia.org/wiki/SFZ_(file_format)":{"title":"SFZ format","titleInlineContent":[{"type":"text","text":"SFZ format"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/SFZ_(file_format)","url":"https:\/\/en.wikipedia.org\/wiki\/SFZ_(file_format)"},"https://youtu.be/o7rL38xrRSE":{"title":"this one","titleInlineContent":[{"type":"text","text":"this one"}],"type":"link","identifier":"https:\/\/youtu.be\/o7rL38xrRSE","url":"https:\/\/youtu.be\/o7rL38xrRSE"},"http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/AIFF/AIFF.html":{"title":"AIFF format","titleInlineContent":[{"type":"text","text":"AIFF format"}],"type":"link","identifier":"http:\/\/www-mmsp.ece.mcgill.ca\/Documents\/AudioFormats\/AIFF\/AIFF.html","url":"http:\/\/www-mmsp.ece.mcgill.ca\/Documents\/AudioFormats\/AIFF\/AIFF.html"},"https://sfzformat.com/opcodes/pitch_keycenter":{"title":"pitch_keycenter","titleInlineContent":[{"type":"codeVoice","code":"pitch_keycenter"}],"type":"link","identifier":"https:\/\/sfzformat.com\/opcodes\/pitch_keycenter","url":"https:\/\/sfzformat.com\/opcodes\/pitch_keycenter"},"https://youtu.be/qPbf5nNyQYo":{"title":"this one","titleInlineContent":[{"type":"text","text":"this one"}],"type":"link","identifier":"https:\/\/youtu.be\/qPbf5nNyQYo","url":"https:\/\/youtu.be\/qPbf5nNyQYo"},"https://en.wikipedia.org/wiki/SoundFont":{"title":"SoundFont","titleInlineContent":[{"type":"text","text":"SoundFont"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/SoundFont","url":"https:\/\/en.wikipedia.org\/wiki\/SoundFont"},"https://sfzformat.com/opcodes/hikey":{"title":"lokey and hikey","titleInlineContent":[{"type":"codeVoice","code":"lokey"},{"type":"text","text":" and "},{"type":"codeVoice","code":"hikey"}],"type":"link","identifier":"https:\/\/sfzformat.com\/opcodes\/hikey","url":"https:\/\/sfzformat.com\/opcodes\/hikey"},"https://www.kvraudio.com/forum/memberlist.php?mode=viewprofile&u=134002":{"title":"vonRed","titleInlineContent":[{"type":"text","text":"vonRed"}],"type":"link","identifier":"https:\/\/www.kvraudio.com\/forum\/memberlist.php?mode=viewprofile&u=134002","url":"https:\/\/www.kvraudio.com\/forum\/memberlist.php?mode=viewprofile&u=134002"},"https://youtu.be/Bx9PC8JJNGg":{"title":"this one","titleInlineContent":[{"type":"text","text":"this one"}],"type":"link","identifier":"https:\/\/youtu.be\/Bx9PC8JJNGg","url":"https:\/\/youtu.be\/Bx9PC8JJNGg"},"http://audiokit.io/downloads/ROMPlayerInstruments.zip":{"title":"this link","titleInlineContent":[{"type":"text","text":"this link"}],"type":"link","identifier":"http:\/\/audiokit.io\/downloads\/ROMPlayerInstruments.zip","url":"http:\/\/audiokit.io\/downloads\/ROMPlayerInstruments.zip"},"doc://DunneAudioKit/documentation/DunneAudioKit":{"role":"collection","title":"DunneAudioKit","abstract":[{"type":"text","text":"Chorus, Flanger, Sampler, Stereo Delay, and Synth for AudioKit, by Shane Dunne."}],"identifier":"doc:\/\/DunneAudioKit\/documentation\/DunneAudioKit","kind":"symbol","type":"topic","url":"\/documentation\/dunneaudiokit"},"https://sfzformat.com/headers/group":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/sfzformat.com\/headers\/group","url":"https:\/\/sfzformat.com\/headers\/group"},"https://www.kvraudio.com/forum/viewtopic.php?t=399035":{"title":"esxtosfz.py","titleInlineContent":[{"type":"text","text":"esxtosfz.py"}],"type":"link","identifier":"https:\/\/www.kvraudio.com\/forum\/viewtopic.php?t=399035","url":"https:\/\/www.kvraudio.com\/forum\/viewtopic.php?t=399035"},"http://www.wavpack.com":{"title":"Wavpack","titleInlineContent":[{"type":"text","text":"Wavpack"}],"type":"link","identifier":"http:\/\/www.wavpack.com","url":"http:\/\/www.wavpack.com"},"https://sfzformat.com/headers/region":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/sfzformat.com\/headers\/region","url":"https:\/\/sfzformat.com\/headers\/region"}}}