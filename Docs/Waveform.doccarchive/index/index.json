{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/waveform\/samplebuffer\/init(samples:)","title":"init(samples: [Float])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/waveform\/samplebuffer\/count","title":"var count: Int","type":"property"}],"path":"\/documentation\/waveform\/samplebuffer","title":"SampleBuffer","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/waveform\/waveform\/coordinator","title":"Waveform.Coordinator","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/waveform\/waveform\/init(samples:start:length:)","title":"init(samples: SampleBuffer, start: Int, length: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/waveform\/waveform\/foregroundcolor(_:)","title":"func foregroundColor(Color) -> Waveform","type":"method"},{"path":"\/documentation\/waveform\/waveform\/makecoordinator()","title":"func makeCoordinator() -> Waveform.Coordinator","type":"method"},{"path":"\/documentation\/waveform\/waveform\/makensview(context:)","title":"func makeNSView(context: Waveform.Context) -> some NSView","type":"method"},{"path":"\/documentation\/waveform\/waveform\/updatensview(_:context:)","title":"func updateNSView(some NSView, context: Waveform.Context)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/waveform\/waveform\/body","title":"var body: Never","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/waveform\/waveform\/dismantlensview(_:coordinator:)","title":"static func dismantleNSView(Self.NSViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/waveform\/waveform\/nsviewrepresentable-implementations","title":"NSViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(activationpoint:)-3kzcc","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(activationpoint:)-48rwp","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityaction(named:_:)-3ibnb","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityaction(named:_:)-5s2pf","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityaction(named:_:)-79xfp","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityactivationpoint(_:)-69my3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityactivationpoint(_:)-7k4ao","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-2i6x3","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-3pt5q","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-4rdaz","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-77ozo","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-7sin8","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-7wdlx","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-86chl","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitycustomcontent(_:_:importance:)-yh0j","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityhint(_:)-3t598","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityhint(_:)-8l0y4","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityhint(_:)-9kr5g","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityinputlabels(_:)-1ti23","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityinputlabels(_:)-1yqvi","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityinputlabels(_:)-2v6aw","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitylabel(_:)-1gra","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitylabel(_:)-1rj8a","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitylabel(_:)-318k2","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:)-4xv26","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:)-63sdb","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:)-6wqhk","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:)-lmdo","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entryid:entrylabel:)-17ehk","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entryid:entrylabel:)-2i5we","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entryid:entrylabel:)-2tn0k","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entryid:entrylabel:)-6fj9v","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entrylabel:)-1bltc","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entrylabel:)-1ogex","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entrylabel:)-5oxg8","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:entries:entrylabel:)-7czor","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:textranges:)-3mlej","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:textranges:)-4wfjc","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:textranges:)-71o2j","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotor(_:textranges:)-72u7a","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityvalue(_:)-2bdv1","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityvalue(_:)-3vq97","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/accessibilityvalue(_:)-g","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:actions:)-30ne7","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:actions:)-3jj5t","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:actions:)-8hmku","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:actions:message:)-18fvj","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:actions:message:)-6aki4","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:actions:message:)-8rnq9","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:presenting:actions:)-4cgpk","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:presenting:actions:)-601bt","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:presenting:actions:)-sbb","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:presenting:actions:message:)-3x9f8","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:presenting:actions:message:)-3z2x0","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(_:ispresented:presenting:actions:message:)-81fvd","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alignmentguide(_:computevalue:)-3jm6d","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/alignmentguide(_:computevalue:)-hwo8","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/aspectratio(_:contentmode:)-1c0xq","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/aspectratio(_:contentmode:)-7bgqb","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(_:in:fillstyle:)-2noqq","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(_:in:fillstyle:)-4twvq","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(in:fillstyle:)-4zj1u","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/background(in:fillstyle:)-8v7ng","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/badge(_:)-25rfw","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/badge(_:)-2xge6","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/badge(_:)-4hn1y","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/badge(_:)-8uldz","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/buttonstyle(_:)-11dw9","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/buttonstyle(_:)-2dv9p","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5ab71","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5k73u","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8almn","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3pjnk","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7rdad","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-87fx1","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3vc3y","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6hzlo","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9tinj","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5u0ul","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9hbzo","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-cqyp","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1rf55","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6131o","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7n9t7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7wjwb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/focusedscenevalue(_:_:)","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/focusedvalue(_:_:)","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/help(_:)-2koqt","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/help(_:)-2n4kl","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/help(_:)-36v2p","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/keyboardshortcut(_:)-4wl4p","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/keyboardshortcut(_:)-kubr","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/listitemtint(_:)-91tw8","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/listitemtint(_:)-9vnea","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/waveform\/waveform\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationsubtitle(_:)-3tg3t","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationsubtitle(_:)-41hq6","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationsubtitle(_:)-6sz7e","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationtitle(_:)-2mm51","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationtitle(_:)-58rnk","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationtitle(_:)-5jdk0","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationtitle(_:)-9rvp8","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/ondrop(of:delegate:)-4mtcd","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondrop(of:delegate:)-5eyih","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondrop(of:istargeted:perform:)-1mg2a","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/ondrop(of:istargeted:perform:)-46vbe","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/ondrop(of:istargeted:perform:)-7t7tv","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ondrop(of:istargeted:perform:)-rauo","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onpastecommand(of:perform:)-11kvh","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/onpastecommand(of:perform:)-5p7g9","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onpastecommand(of:validator:perform:)-4583d","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/onpastecommand(of:validator:perform:)-98nyc","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/waveform\/waveform\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/padding(_:)-688k6","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/padding(_:)-9o5jq","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/safeareainset(edge:alignment:spacing:content:)-56spx","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/safeareainset(edge:alignment:spacing:content:)-7a218","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/scaleeffect(_:anchor:)-95ltt","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/scaleeffect(_:anchor:)-9mx44","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchable(text:placement:prompt:)-6zypo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchable(text:placement:prompt:)-72ri9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchable(text:placement:prompt:)-d0km","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchable(text:placement:prompt:suggestions:)-1iwuw","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchable(text:placement:prompt:suggestions:)-7tsm1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/searchable(text:placement:prompt:suggestions:)-8vrpa","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/toolbar(content:)-1w8ep","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/toolbar(content:)-7twm8","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/waveform\/waveform\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/waveform\/waveform\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/waveform\/waveform","title":"Waveform","type":"struct"}],"path":"\/documentation\/waveform","title":"Waveform","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}